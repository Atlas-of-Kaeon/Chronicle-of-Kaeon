Kaeon United

	Philosophy
	
		-
			This document lists various conventions for Kaeon United.
		-
	
	Principles

		United Suite

			-
				Kaeon United shall provide a unified interface to the United Suite.
			-

		Format

			-
				Kaeon United shall be implemented as an HTJS file, which may be executed as a
				command line utility, imported into an HTML document using a script tag, imported
				as a CommonJS module, used as a Kaeon FUSION interface, or used as a shadow host
				for other applications.
			-

		Hosting

			-
				Kaeon United shall be hosted online so that users can use it via CDN regardless of
				the environment they are operating in.
			-

		Functionality

			Reference Router

				-
					Kaeon United shall reference an external file known as the reference router,
					which shall allow its functionality to be extended.

					It shall reference various CommonJS modules, Kaeon FUSION interfaces, command
					scripts, and online applications.
				-

			Command Line

				-
					Running Kaeon United from the command line shall allow for the used of various
					utilities in the terminal.

					The first argument shall be the name of the command script being used, as
					defined in the reference router. All other arguments shall serve as arguments
					for said command script.
				-

			HTML Script

				-
					Importing Kaeon United into an HTML document through a script tag shall allow
					the dynamic use of CommonJS on the page.
				-
			
			Module

				Kaeon FUSION Interface

					-
						As a Kaeon FUSION interface, Kaeon United shall have the module alias
						"Kaeon United".

						Said interface shall integrate all of the Kaeon FUSION interfaces
						referenced by the reference router when used.
					-

				CommonJS Module

					-
						Importing Kaeon United as a CommonJS module shall return an object
						containing various CommonJS modules referenced in the reference router.
					-

				United C Module

					-
						Including Kaeon United as a United C import using the "use" operator shall
						import all of the standard and Kaeon United C or C++ utilities depending on
						the language detected.
					-

			Kaeon United Packages

				Kaeon Control

					-
						All of the hardware control utilities provided by Kaeon United shall
						collectively be known as Kaeon Control.

						Kaeon Control aims to be as universal as possible, but places a special
						focus on compatibility with the general IoT stack.
					-

				Kaeon Vision

					-
						All of the UI utilities provided by Kaeon United shall collectively be
						known as Kaeon Vision.
					-

			Shadow Host

				-
					If Kaeon United is used as a shadow host, it may have the URL arguments
					"UnitedJS", "UnitedJSRaw", "UnitedOP", "UnitedOPRaw", "HTML", and "HTMLRaw".

					UnitedJS, if present, shall specify the path to a United JavaScript file which
					shall be executed.

					UnitedJSRaw, if present, shall specify United JavaScript code which shall be
					executed.

					UnitedOP, if present, shall specify the path to a Kaeon FUSION file which shall
					be executed.

					UnitedOPRaw, if present, shall specify the path to a Kaeon FUSION file which shall
					be executed.

					HTML, if present, shall specify the path to an HTML file which shall be
					rendered.

					If both more than one of the aforementioned arguments are present, the
					JavaScript, if given, shall execute first, the Kaeon FUSION, if given, shall
					execute next, and the HTML, if given, shall be rendered last.

					If none of the aforementioned arguments are present, a page displaying a user
					guide for Kaeon United shall be rendered.
				-

			Applications

				-
					Kaeon United may redirect to other applications.

					If Kaeon United is accessed in the browser with the URL argument "app", and
					said argument contains an alias to the URL of an application referenced in the
					reference router, Kaeon United shall redirect to said application, and shall
					pass along all URL arguments passed to it except for "app".
				-

		Reference Router Defaults

			Standard Language Command

				-
					The standard language command is a convention for command scripts used for
					compiling and interpreting programming languages.

					To dynamically specify source text to the utility, the first argument must be
					"read", and the third argument must be said text itself.

					To load the source text to the utility from a file, the first argument must be
					"open", and the third argument must be the file path.

					To save the output of the utility to a file, there must be a third argument
					specifying the path of said file.
				-

			Default Standard Language Commands

				-
					Kaeon United's default reference router shall include certain standard language
					command scripts, including "process", which runs Kaeon FUSION code, "parse",
					which converts ONE+ code to ONE, "preprocess", which runs the Universal
					Preprocessor, "js", which runs United JavaScript, "ucc", which runs the United
					C compiler, "assemble", which compiles CSB, and "disassemble", which
					disassembles CSB.

					Both the process and js utilities, if run without specified source text, will
					run as console REPLs.
				-